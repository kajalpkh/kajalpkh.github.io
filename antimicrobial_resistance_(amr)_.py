# -*- coding: utf-8 -*-
"""Antimicrobial Resistance (AMR) .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s3e-hnnWVEN4eZGqxM6cBfGmfPREBaST
"""

!pip install geopandas

"""Task 1: Read in the ECDC_surveillance_data file into a pandas dataframe called AMR_df.
Make sure that missing values (which in this file are indicated by a â€“ character) are changed to NaNPrint out the column headings of the dataframe and the associated data types.
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import matplotlib.pyplot as plt
import geopandas as gpd
import numpy as np

AMR_df = pd.read_csv('/content/drive/MyDrive/ECDC_surveillance_data.csv')

AMR_df.replace('-', np.NaN)

print(AMR_df.columns.values, AMR_df.dtypes)

"""Task 2: Print out the unique values of the Microbe, Antibacterial and Indicator columns"""

df = AMR_df.drop_duplicates(subset=['Pathogen','Antimicrobial','Indicator', 'Unit', 'Time', 'RegionName', 'NumValue'])
print(df)

"""Task 3: With the help of the geopandas module (see final workshop) create a map of Europe (You can consider Europe as covering the area between longitude -30 to 40 and latitude 30 to 75) where countries are shaded by percentage of resistant isolates of meticillin resistant Staphylococcus aureus (MRSA) in 2019. Create a second map showing the incidence of carbapenem resistant Escherichia coli. in 2019. Comment on the output.  """

MRSA_df=AMR_df[AMR_df['Antimicrobial'].isin(['Meticillin (MRSA)'])]
MRSA19_df=MRSA_df[MRSA_df['Time'].isin([2019])]
MRSA19_df1=MRSA19_df[MRSA19_df['Unit'].isin(['%'])]

MRSA19_df1['NumValue']=MRSA19_df1['NumValue'].astype(float)

World=gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
combine_df = World.merge(MRSA19_df1, how='left', left_on='name', right_on='RegionName')
combine_df.plot('NumValue', cmap='YlOrRd', figsize=(15,10), legend=True)
plt.title('Percentage of resistant isolates of meticillin resistance Staphylococcus aureus (MRSA) in 2019')
plt.xlim(-30, 40)
plt.ylim(30, 75)
plt.savefig('/content/drive/MyDrive/Python_assessment/task3_1.png')

Carb_df=AMR_df[AMR_df['Pathogen'].isin(['Escherichia coli'])]
Carb19_df=Carb_df[Carb_df['Time'].isin([2019])]
Carb19_df1=Carb19_df[Carb19_df['Unit'].isin(['%'])]
Carb19_df2=Carb19_df1[Carb19_df1['Antimicrobial'].isin(['Carbapenems'])]

Carb19_df2[Carb19_df2 == '-'] = np.nan
Carb19_df2['NumValue']=Carb19_df2['NumValue'].astype(float)

World=gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
combine_df2 = World.merge(Carb19_df2, how='left', left_on='name', right_on='RegionName')
fig, ax= plt.subplots(figsize=(16,8))
combine_df2.plot('NumValue', ax=ax, cmap='YlOrRd', figsize=(16,10), legend=True)
plt.title('Incidence of carbapenem resistant Escherichia coli. in 2019', fontsize=14)
ax.set_xlim(-30, 40)
ax.set_ylim(30, 75)
plt.savefig('/content/drive/MyDrive/Python_assessment/task3_3.png')

"""**The first map shows that the percentage of resistant isolates of MRSA in 2019 was highest in Romania and lowest in Northern Europe. However, in comparison, the incidence of E coli. was highest in Spain. Similarly, the lowest countries were northern europe.**

Task 4: Determine the change in MRSA incidence rate between 2004 and 2019 for each country and create a map of Europe where countries are shaded by the change in incidence rate. Identify the country with the largest increase and the country with the largest decrease in MRSA incidence rate in this period. Comment on the results.
"""

MRSA04_df=AMR_df[AMR_df['Antimicrobial'].isin(['Meticillin (MRSA)'])]
MRSA04_df3=MRSA04_df[MRSA04_df['Unit'].isin(['%'])]

MRSA2004=AMR_df[AMR_df['Antimicrobial'].isin(['Meticillin (MRSA)'])]
MRSA2004_df=MRSA2004[MRSA2004['Time'].isin([2004])]
MRSA2004_df1=MRSA2004_df[MRSA2004_df['Unit'].isin(['%'])]

MRSA2019=AMR_df[AMR_df['Antimicrobial'].isin(['Meticillin (MRSA)'])]
MRSA2019_df=MRSA2019[MRSA2019['Time'].isin([2019])]
MRSA2019_df1=MRSA2019_df[MRSA2019_df['Unit'].isin(['%'])]

MRSA2019_df1['NumValue']=MRSA2019_df1['NumValue'].astype(float)

merge_df = pd.concat([MRSA2004_df1, MRSA2019_df1])

table = merge_df.pivot_table('NumValue', index = ['Antimicrobial', 'Unit', 'RegionName'], columns= 'Time')
table['diff'] = table[2019]-table[2004]
print(table)

from pandas.core.reshape.pivot import pivot_table
World=gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
combine_df2 = World.merge(table, how='left', left_on='name', right_on='RegionName' )
combine_df2.plot('diff', cmap='YlOrRd', figsize=(15,10), legend=True)
plt.title('Change in MRSA incidence rate between 2004 and 2019', fontsize=16)
plt.xlim(-30, 40)
plt.ylim(30, 75)
plt.savefig('/content/drive/MyDrive/Python_assessment/task4.png')

"""**The country which had the largest decrease in the incidence of MRSA was the United Kingdom and the country which had the largest increase was Slovakia. The results show that most countries have shown a decrease in the incidence rate, however, countries is eastern and southern europe have either had very little decrease or a slight increase. The overall incidence rate for Europe is a decrease.**

Task 5: For each of your assigned microbes and countries create a plot that shows how the incidence rate of resistance to the different antimicrobials changes in the period from 2000 to 2021. Comment on the outputs.
"""

Acin=AMR_df[AMR_df['Pathogen'].isin(['Acinetobacter spp.'])]
Acin2000_df=Acin[Acin['Time'].isin([2012])]
Acin2000_df0 =Acin2000_df[Acin2000_df['RegionName'].isin(['Cyprus', 'France', 'Czechia'])]
Acin2000_df1=Acin2000_df0[Acin2000_df0['Unit'].isin(['%'])]

Acin2021=AMR_df[AMR_df['Pathogen'].isin(['Acinetobacter spp.'])]
Acin2021_df=Acin2021[Acin2021['Time'].isin([2021])]
Acin2021_df0 =Acin2021_df[Acin2021_df['RegionName'].isin(['Cyprus', 'France', 'Czechia'])]
Acin2021_df1=Acin2021_df0[Acin2021_df0['Unit'].isin(['%'])]

Acin_merge =pd.concat([Acin2000_df1, Acin2021_df1])
Acin_merge1=Acin_merge.drop(columns=['Unnamed: 0', 'Pathogen', 'Antimicrobial', 'Indicator', 'Unit'])
print(Acin_merge1)

table1 = Acin_merge.pivot_table('NumValue', index = ['RegionName'], columns='Time', aggfunc='max')
table3= table1.replace('-', np.NaN)
print(table1)

table_1=table3.astype(float)

strep=AMR_df[AMR_df['Pathogen'].isin(['Streptococcus pneumoniae'])]
strep2000_df=strep[strep['Time'].isin([2005])]
strep2000_df0 =strep2000_df[strep2000_df['RegionName'].isin(['Cyprus', 'France', 'Czechia'])]
strep2000_df1=strep2000_df0[strep2000_df0['Unit'].isin(['%'])]

strep1=AMR_df[AMR_df['Pathogen'].isin(['Streptococcus pneumoniae'])]
strep2021_df=strep1[strep1['Time'].isin([2021])]
strep2021_df0 =strep2021_df[strep2021_df['RegionName'].isin(['Cyprus', 'France', 'Czechia'])]
strep2021_df1=strep2021_df0[strep2021_df0['Unit'].isin(['%'])]

strep_merge =pd.concat([strep2000_df1, strep2021_df1])

table2 = strep_merge.pivot_table(values='NumValue', index = ['RegionName'], columns='Time', aggfunc='max')
print(table2)

mergetable2 = table_1.merge(table2, how='outer', left_on='RegionName', right_on='RegionName')
mergetable2[mergetable2 == '-'] = np.nan
mergetable2=mergetable2.astype(float)
print(mergetable2)

table2[table2 == '-'] = np.nan
table2=table2.astype(float)
ax = table2.T.plot(kind='bar', ylabel='Murder Rate', title=' A bar chart to show the incidence rate of resistance of Streptococcus pneumoniae from 2005 to 2021')
plt.savefig('/content/drive/MyDrive/Python_assessment/task5_strep.png')

table1[table1 == '-'] = np.nan
table1=table1.astype(float)
ax = table1.T.plot(kind='bar', ylabel='Murder Rate', title=' A bar chart to show the incidence rate of resistance of Acinetobacter spp from 2012 to 2021')
plt.savefig('/content/drive/MyDrive/Python_assessment/task5_Acin.png')

"""**The bar chart demonstrates how the incidece rate of Streptococcus pneumoniae and Acinetobacter spp has changed from 2000 (or the earliest year the data that was provided for) to 2021. As seen in the graph for Streptococcus pneumoniae, there has not been much of a difference from 2005 to 2021 and there is no data given for Cyprus. There has been a slight increase in the incidence rate for Czechia and a slight decrease for France. For Acinetobacter spp, we can see that there is no date given for Czechia in 2012 , but it is the second highest in 2021. There has been a significant increase in the incidence rate for Cyprus and a slight increase for France.**

Task 6: One feature in combating AMR may be the amount of testing performed.  Calculate the total number of tests carried out in each year in each country.  Using the population data available from the natural earth data set within geopandas calculate the number of tests per 10,000 population in each country (testing rate). You may assume the population is constant throughout the period.  
Create a plot showing how testing rates have changed over time in each country and report which country has the highest testing rate and which the lowest in 2021. Comment on the outputs.
"""

tests_df= AMR_df[AMR_df['Indicator'].isin(['Total tested isolates'])]

tests_df['NumValue']=tests_df['NumValue'].astype(float)

World3=gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
World3['pop_est']=World3['pop_est'].astype(float)


world3_df = World3.merge(tests_df, how='left', left_on='name', right_on='RegionName')

world3_df.pivot_table(values=['NumValue', 'pop_est'], index = ['RegionName'], columns=['Indicator', 'Time'], aggfunc='sum', margins = True)

tests_df2 = AMR_df[AMR_df['Indicator'].isin(['Total tested isolates'])]

tests_df2['NumValue']=tests_df['NumValue'].astype(float)

number_of_tests = tests_df2.groupby(['RegionName', 'Time']).sum()

print(number_of_tests)

World5=gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
World5['pop_est']=World5['pop_est'].astype(float)


world5_df = World5.merge(number_of_tests, how='right', left_on='name', right_on='RegionName')

world5_df['Test Rate']=(world5_df['NumValue']*10000/world5_df['pop_est'])
print(world5_df)

world5_df.index=number_of_tests.index
number_of_tests['Test Rate']=world5_df['Test Rate']
number_of_tests=number_of_tests.drop(columns=['NumValue'])
print(number_of_tests)

numberoftests = number_of_tests.pivot_table(values=['Test Rate'], index = ['Time'], columns='RegionName')

print(numberoftests)

from cycler import cycler
plt.rc('axes', prop_cycle=(cycler('linestyle', [':', '-.', '-', '--'])))

fig, ax= plt.subplots(figsize=(16,8))
numberoftests.plot(ax=ax, cmap='hsv', figsize=(17,12), legend=True, title=('How testing rates have changed over time in each country from 2000 to 2021'))

fig.savefig('/content/drive/MyDrive/Python_assessment/task6.png')

"""**The graph shows that the country with the highest testing rate is Denmark, and the country with the lowest testing rate is Romania. We can see that since 2000, there has not been a massive difference in the testing rate for Romania and it has stayed relatively consistent. In comparison, Denmark has increased its testing rate significantly, from being almost the lowest in 2000 and dramatically increasing to the highest in 2021.**"""

import seaborn as sns

numberoftests = numberoftests.reset_index(drop=True)

"""Task 7: One factor affecting the amount of testing performed may be the wealth of the country.  The natural earth dataset also contains the total GDP of each country.  Calculate the GDP per capita for each country.
Create a Seaborn pairplot that shows the correlation between the values of testing rate in 2019, GDP per capita and MRSA resistance rates.  Comment on the results.

"""

gdp= World5.pivot_table(values= ['gdp_md_est','pop_est'], index=['name'])
gdp['gdp_per_capita']= (gdp['gdp_md_est']/gdp['pop_est'])

print(gdp)

testrate_2019=numberoftests.iloc[19]
testrate_2019 = testrate_2019.to_frame().reset_index()
testrate_2019 = testrate_2019.drop(columns=['level_0'])
testrate_2019['testrate']=testrate_2019[19]
print(testrate_2019)
testrate_2019.columns

MRSA=MRSA2019_df1.pivot_table('NumValue', index='RegionName')
MRSA['MRSA2019']=MRSA['NumValue']
print(MRSA)
MRSA.columns

merged = MRSA.merge(testrate_2019, how='left', left_on='RegionName', right_on='RegionName')

merged1 = gdp.merge(merged, how='right', left_on='name', right_on='RegionName')


merged2=merged1.pivot_table(values=['gdp_per_capita', 'testrate', 'MRSA2019'], index='RegionName')

print(merged2)

g = sns.pairplot(merged2)
g.fig.suptitle("Correlation between the values of testing rate in 2019, GDP per capita and MRSA resistance rates", y=1.08, fontsize=14)
plt.savefig('/content/drive/MyDrive/Python_assessment/task7.png')

"""**The pairplot shows that there is a positive correlation between the testing rate and the GDP per capita, there is a negative correlation between the MRSA resistance rates and the testing rate meaning that as the testing rate began to increase the resistance rate for MRSA decreased, and there is also a negative correlation between MRSA resistance rates and GDP per capita, which shows countries with higher GDP per capita are more likely to have lower MRSA resistance rates.**

Task 8:  Controlling the usage of antibiotics to where they are clinically needed can assist in preventing the emergence of resistance. The ESAC Net data contains multiple tables of data into the usage of antibiotics across Europe. Data is broken down into community use (ie you are prescribed antibiotics by your GP) and Hospital usage.
Examine the data in Excel to determine its layout and then, by reading appropriate data into data frames and processing it in your Jupyter Notebook, determine if the level of use of penicillins in the community in 2021 contributes to the prevalence of Aminopenicillin resistant pathogens and if the level of use of quinolones in the community in 2021 contributes to the prevalence of fluoroquinolone resistant pathogens
"""

customer_data_file = '/content/drive/MyDrive/ESAC-Net_report_2021_downloadable_tables.xlsx'

excel =  pd.read_excel(customer_data_file, sheet_name='D2_J01C_AC', usecols=['Country name', '2021- Penicillins'])
print(excel)

excel2 =  pd.read_excel(customer_data_file, sheet_name='D6_J01M_AC', usecols=['Country name', '2021- Quinolones'])
print(excel2)

Amino=AMR_df[AMR_df['Antimicrobial'].isin(['Aminopenicillins'])]
Amino_df=Amino[Amino['Time'].isin([2021])]
Amino_df1=Amino_df[Amino_df['Indicator'].isin(['R - resistant isolates, percentage'])]
Amino_df1=Amino_df1.drop(columns=['Unnamed: 0', 'Pathogen', 'Antimicrobial', 'Indicator', 'Unit'])
Amino_df1[Amino_df1 == '-'] = np.nan
Amino_df1['NumValue']=Amino_df1['NumValue'].astype(float)
Aminodf = Amino_df1.pivot_table(index=['RegionName'],values=['NumValue'],aggfunc='sum')

print(Amino_df1)

print(Aminodf)

penicillin_merge = excel.merge(Aminodf, how='right', left_on='Country name', right_on='RegionName')

print(penicillin_merge)

penicillin = sns.pairplot(penicillin_merge, kind='reg', y_vars='NumValue', x_vars='2021- Penicillins')
penicillin.fig.set_size_inches(16,8)
plt.title("A graph to show the correlation between the prevalence of Aminopenicillin resistant pathogens and the use of penicillins in the community in 2021", fontsize=15)
plt.xlabel(('Use of Penicillins'))
plt.ylabel(('Resistance'))
plt.savefig('/content/drive/MyDrive/Python_assessment/task8.png')
plt.show()

"""**We can see here that there is a direct correlation netween the use of penicllins in the commjunity and the prevalence of Aminpenicillin resistant pathogens.**"""

fluoro=AMR_df[AMR_df['Antimicrobial'].isin(['Fluoroquinolones'])]
fluoro_df=fluoro[fluoro['Time'].isin([2021])]
fluoro_df1=fluoro_df[fluoro_df['Unit'].isin(['%'])]
fluoro_df1=fluoro_df1.drop(columns=['Unnamed: 0', 'Pathogen', 'Antimicrobial', 'Indicator', 'Unit'])
fluoro_df1[fluoro_df1 == '-'] = np.nan
fluoro_df1['NumValue']=fluoro_df1['NumValue'].astype(float)
fluorodf = fluoro_df1.pivot_table(index=['RegionName'],values=['NumValue'],aggfunc='sum')
fluoro2=fluoro_df1.groupby('RegionName')['NumValue'].sum()
print(fluorodf)

quinolones_merge = excel2.merge(fluoro2, how='right', left_on='Country name', right_on='RegionName')
print(quinolones_merge)

quinolones= sns.pairplot(quinolones_merge, kind='reg', y_vars='NumValue', x_vars='2021- Quinolones')
quinolones.fig.set_size_inches(16,8)
plt.title("A graph to show the correlation between the prevalence of Fluoroquinolone resistant pathogens and the use of quinolones in the community in 2021", fontsize=15)
plt.xlabel(('Use of Quinolones'))
plt.ylabel(('Resistance'))
plt.savefig('/content/drive/MyDrive/Python_assessment/task8_2.png')
plt.show()

"""**We can see here that there is a direct correlation between the use of quinolones in the community and the prevalence of Fluoroquinolone resistant pathogens.**

Task 9: Based on your analysis comment on the characteristics of countries in Europe that are maintaining low levels of AMR and any challenges in adopting such practices globally

**The countries which are maintaining low levels of AMR are using less quinolones and penicillins as it prevents the prevalence of creating pathogens which become resistant. Although this is a good thing, the use of these are sometimes necessary in order to ensure that the prevalence of the Antimicrobials is not high and people are being treated. Therefore, some sort of compromise should be made, but it is still recommended from the analysis that the use of the medication in the community should at first be decreased to reduce AMR. We should be looking at countries such as the United kingdom, whose MRSA incidence rate has decreased over time and what kind of things have been adopted by countries like these. Some challenges that countries may face is that there is a correlation between a countries GDP per capita and the resistance rates, unlike the UK who have a higher GDP per capita, so countries that are lower may find it difficult to adopt the same practices due to funds or their national healthcare system. This is further demonstrated by the correlation of testing rates and the resistance rate of pathogens. It is seen that countries with higher testing rates have a lower resistance rate and some countries whcih have highest resistance rates such as Romania have low GDP per capita, so it can be the case where countries such as these have difficulty with introducing more testing for these antimicrobials.**
"""